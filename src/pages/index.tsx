import Head from "next/head";
import Image from "next/image";
import { ChangeEvent, ChangeEventHandler, useEffect, useState } from "react";
import { Metronome } from "../scripts/metronome";
import localFont from "next/font/local";
import Genre from "../components/Genre";
import { MetronomeComponent } from "@/components/MetronomeComponent";
const variableFont = localFont({ src: "../../public/fonts/DS-Digital.woff2" });

export default function Home() {
  const [tempo, setTempo] = useState(100);
  const [metronome, setMetronome] = useState<Metronome>(new Metronome(tempo));
  const [metronomePlaying, setMetronomePlaying] = useState(false);
  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);
  const [numSongs, setNumSongs] = useState<number>();

  const handleGenreChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    if (!selectedGenres.includes(event.target.value)) {
      const copy = selectedGenres.slice();
      copy.push(event.target.value);
      setSelectedGenres(copy);
    }
  };
  const handleNumChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const num = parseInt(event.target.value);
    setNumSongs(num);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="outer">
        <div className="inner">
          <h1 className="header">CADANCE</h1>
          <div className="log-in-buttons"></div>

          <h3 className="switch-title">Metronome ON/OFF</h3>
          <div className="metronome-switch-div">
            <label className="switch">
              <input
                onChange={() => {
                  metronome.startStop();
                  setMetronomePlaying(!metronomePlaying);
                }}
                aria-label="metronome switch"
                type="checkbox"
              />
              <span className="slider round"></span>
            </label>
          </div>
          <MetronomeComponent
            tempo={tempo}
            setTempo={setTempo}
            metronome={metronome}
            max={300}
            min={50}
          ></MetronomeComponent>
          <div className="selectedOptions">
            {selectedGenres.length === 0 ? (
              <>
                <br></br>
                <br></br>
                <br></br>
              </>
            ) : (
              selectedGenres.map((val, i) => {
                return (
                  <Genre
                    key={i}
                    genre={val}
                    genres={selectedGenres}
                    setGenre={setSelectedGenres}
                  ></Genre>
                );
              })
            )}
          </div>

          <div className="dropdown-div">
            <select
              name="genre"
              onChange={handleGenreChange}
              defaultValue={"disabled"}
              className="dropdown hvr-grow"
            >
              <option disabled value={"disabled"}>
                Select desired genres
              </option>
              <option value="test1">test1</option>
              <option value="test2">test2</option>
              <option value="test3">test3</option>
              <option value="test4">test4</option>
            </select>

            <select
              name="num-songs"
              onChange={handleNumChange}
              defaultValue={"disabled"}
              className="dropdown hvr-grow"
            >
              <option disabled value={"disabled"}>
                Select desired number of songs
              </option>
              {[...Array(10)].map((x, i) => {
                return (
                  <option key={i + 1} value={i + 1}>
                    {i + 1}
                  </option>
                );
              })}
            </select>
          </div>
          <div className="search-button-div">
            <button className="search-button hvr-grow">FIND SONGS</button>
          </div>
        </div>
      </div>
    </>
  );
}
